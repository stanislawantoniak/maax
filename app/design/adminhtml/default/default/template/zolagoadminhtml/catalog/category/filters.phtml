<?php
	$helper = Mage::helper('zolagoadminhtml');
	$filterCollection = $this->getFilterCollection();
?>
<div class="content-header">
   <h3><?php echo $this->getHeaderText() ?></h3>
   <p class="content-buttons form-buttons">
        <?php echo $this->getButtonsHtml(); ?>
    </p>
</div>
<form action="<?php echo $this->getForm()->getAction() ?>" method="post" id="filter_edit_form">
    <?php echo $this->getBlockHtml('formkey')?>
    <div class="no-display">
        <input type="hidden" id="change_flag_element" name="<?php echo $this->getPrefix(); ?>_change_type_flag" value="" />
        <input type="hidden" id="save_and_edit" name="<?php echo $this->getPrefix(); ?>save_and_edit" value="" />
    </div>
	<div class="grid">
		<table class="data" cellspacing="0">
			<thead>
				<tr class="headings">
					<th class="no-link" style="width:150px"><span class="nobr"><?php echo $helper->__('Attribute') ?></span></th>
					<th class="no-link" style="width:50px"><span class="nobr"><?php echo $helper->__('Sort Order') ?></span></th>
					<th class="no-link" style="width:300px"><span class="nobr"><?php echo $helper->__('Options') ?></span></th>
					<th class="no-link"><span class="nobr"><?php echo $helper->__('Renderer') ?></span></th>
					<th class="no-link" style="width:300px"><span class="nobr"><?php echo $helper->__('Depends') ?></span></th>
					<th class="no-link"><span class="nobr"><?php echo $helper->__('Lonley') ?></span></th>
					<th class="no-link a-right" style="width: 50px;"><span class="nobr"><?php echo $helper->__('Remove') ?></span></th>
				</tr>
			</thead>
			<tfoot>
				<tr>
					<th colspan="7">
						<div class="a-right">
							<?php echo $this->getAttributesSelectHtml('selectAttribute');?>
							<?php echo $this->getAddButtonHtml('addBtn');?>
						</div>
					</th>
				</tr>
			</tfoot>
			<tbody class='fieldset_config_body'>
				<tr id='rowTpl' style='display:none'>
					<td class="a-left">
						<input alt="attribute_id" value="$$ATTRIBUTE_ID" class="attribute_id" name="<?php echo $this->getPrefix(); ?>[$$ROW][attribute_id]" type="hidden" />
						<input alt="frontend_label" value="$$FRONTEND_LABEL" name="<?php echo $this->getPrefix(); ?>[$$ROW][frontend_label]" style="width:120px" type="input" disabled='disabled' />
					</td>
					<td class="a-left">
						<input alt="sort_order" value="$$SORT_ORDER" name="<?php echo $this->getPrefix(); ?>[$$ROW][sort_order]" style="width:30px" type="input" />
					</td>
					<td class="a-left">
						<input alt="use_specified_options" value="$$USE_SPECIFIED_OPTIONS" name="<?php echo $this->getPrefix(); ?>[$$ROW][use_specified_options]" class="use_specified_options" style="width:100px" type="checkbox" onclick="$('yes__use_specified_options_$$ROW').toggle()" />
						<span><?php echo $helper->__('Show Selected Values'); ?></span>
						<div id="<?php echo 'yes__use_specified_options_$$ROW'; ?>" class="<?php echo 'yes__use_specified_options_$$ROW'; ?>">
							<select multiple name="<?php echo $this->getPrefix(); ?>[$$ROW][options]" style="width:295px; height: 150px" class="attributeOptions">
							</select>
							<br />
							<input alt="can_show_more" value="$$CAN_SHOW_MORE" name="<?php echo $this->getPrefix(); ?>[$$ROW][can_show_more]" style="width:70px" type="checkbox" />
							<span><?php echo $helper->__('Use "Show More" Link'); ?></span>
						</div>
					</td>
					<td class="a-left" style="width:100px">
						<?php echo $this->getRenderSelectHtml('renderer_id'); ?>
					</td>
					<td class="a-left">
						<input name="<?php echo $this->getPrefix(); ?>[$$ROW][use_parent_attribute]" class="use_parent_attribute" type="checkbox" onclick="$('yes__use_parent_attribute_$$ROW').toggle()" />
						<span><?php echo $helper->__('Use Parent Attribute'); ?></span>
						<div id="<?php echo 'yes__use_parent_attribute_$$ROW'; ?>" class="<?php echo 'yes__use_parent_attribute_$$ROW'; ?>">
							<span><?php echo $helper->__('Select Attribute'); ?></span>
							<select name="<?php echo $this->getPrefix(); ?>[$$ROW][parent_attribute_id]" class="parent_attribute_id"></select>
						</div>	
					</td>
					<td class="a-left">
						<input alt="show_multiple" value="$$SHOW_MULTIPLE" name="<?php echo $this->getPrefix(); ?>[$$ROW][show_multiple]" class="show_multiple" style="width:70px" type="checkbox" />
						<span><?php echo $helper->__('Show Multiple Values'); ?></span>
					</td>
					<td class="a-right">
						<button type="button" class="scalable delete delete-attribute"><span>&nbsp;</span></button>
					</td>
				</tr>
			</tbody>
		</table>
	</div>
</form>



<script type="text/javascript">
//<![CDATA[
(function ()
{
    var lastRowNum = 0;
    var tbody = $$('tbody.fieldset_config_body')[0];
	var suffixTpl = new Template('#{key}');

    function addRow(inData)
    {
        var rowHtml = $('rowTpl').innerHTML
        var data = {
            frontend_label:			'',
			attribute_id:			'',
			options:				'',
			parent_attribute_id:	'',
            sort_order:				'0',
			show_multiple:			'0',
			use_specified_options:	'0',
			specified_options:		'0',
			can_show_more:			'0',
			frontend_renderer:		'',
        }
        Object.extend(data, inData);
        data.row = ++lastRowNum;
		
        var isIE = (/msie [1-8]\./i).test(navigator.userAgent);
        var numericVars = ['sort_order', 'show_multiple', 'use_specified_options', 'can_show_more'];
        var forcedNumericVars = [];
        var keys = $H(data).keys().sortBy(function(s){return (''+s).length}).reverse();
        for (j=0; j<keys.length; j++) {
            var i=keys[j];
            value = data[i] || ''
            if (-1 != numericVars.indexOf(i) && data[i]
                || -1 != forcedNumericVars.indexOf(i)
            ) {
                value *= 1;
                data[i] = value;
            }
            if (i!=='row' && isIE) value = '"'+value+'"';
            rowHtml = rowHtml.replace(new RegExp('\\$\\$'+i.toUpperCase(), 'g'), value);		
        }
        var regExTpl = [
            new Template('<option (([^>]*(alt="?#{key}"?|value="?#{value}"?(?=[\\s>]))){2})'),
            new Template('<option $1 selected="selected"'),
            new Template('<input (([^>]*(alt="?#{key}"?|value="?#{value}"?(?=[\\s>])|type="?checkbox"?)){3})'),
            new Template('<input $1 checked="checked"')
        ];
		
        tbody.insert('<tr>'+rowHtml+'</tr>')
        var trs = tbody.childElements()
        var tr = trs[trs.length-1]
        tr.addClassName(lastRowNum%2 ? 'odd' : 'even')
        var del = $(tr).select('button.delete-attribute')[0];
        if (del) {
            $(del).observe('click', function(e) { 
				e.stop();
				$(del.parentNode.parentNode).remove();
				removeAttribute(data.attribute_id);
				refreshGridClasses();
			});
        }
		
		var checkboxFields = ['use_specified_options', 'use_parent_filter', 'show_multiple'];
		checkboxFields.each(function(key) {
			var checkboxElements = $(tr).select('input.'+key);
			checkboxElements.each(function(element) {
				if (element.value === '1') {
					element.setAttribute('checked', 'checked');
				}
			});
		});
		
        var selectFields = $H({use_specified_options: 0, can_show_more: 0, show_multiple: 0, parent_attribute_id: 0});
        selectFields.each(function(pair){
            var varsForEval, value=data[pair.key], key=pair.key;
            for (var rxIdx=0; rxIdx<regExTpl.length; rxIdx+=2) {
                varsForEval = [];
                if (value) {
                    if (!Object.isArray(value)) {
                        value = String.interpret(value).split(',');
                    }
                    value.each(function(val){
                        varsForEval.push({key: key, value: val});
                    })
                } else {
                    varsForEval.push({key: key, value: value});
                }
                for (var vfeIdx=0; vfeIdx<varsForEval.length; vfeIdx++) {
                    var varForEval = varsForEval[vfeIdx];
                    var rxFind = regExTpl[rxIdx].evaluate(varForEval);
                    var rxReplace = regExTpl[rxIdx+1].evaluate(varForEval);
                    rowHtml = rowHtml.replace(new RegExp(rxFind, 'i'), rxReplace);
                }
            }
        });		
		
        var toggleFields = ['use_specified_options', 'use_parent_attribute'];
        toggleFields.each(function(key){
            var yesKey = suffixTpl.evaluate({key: 'yes__'+key+'_'+data.row});
            var noKey = suffixTpl.evaluate({key: 'no__'+key+'_'+data.row});
            if (!data[key]) {
                $$('.'+yesKey).invoke('hide');
                $$('.'+noKey).invoke('show');
            } else {
                $$('.'+yesKey).invoke('show');
                $$('.'+noKey).invoke('hide');
            }
        });
		addAttribute(data.attribute_id);
		
		var attributeOptionsHTML = $(tr).select('select.attributeOptions')[0];
		var attributeOptions = data.options;	
		attributeOptionsHTML.innerHTML = "";
		attributeOptions.forEach(function(singleOption) {
			if (singleOption.value) {
				attributeOptionsHTML.insert(
					new Element('option', {
						'value': singleOption.value
					}).
					update(singleOption.label)
				);
			}
		});
    }

	function prepareNewItem(attributeId){
		var valuesUrl = '<?php echo $this->getAttributeOptionsUrl();?>';
		new Ajax.Request(valuesUrl, {
		  onSuccess: function(response) {
				var json = response.responseJSON;
				if(json.status!=1){
					alert(json.content);
					return;
				}
				//console.log(json.content);
				addRow(json.content);
				refreshGridClasses();
		  },
		  parameters: {attribute_id:attributeId}
		});
	}
	
	allAttributes = <?php echo $this->getPossibleAttributesJson();?>;
	attributesInUse = [];
	
	function refreshAttributeSelect(){
		var field = $("selectAttribute");
		field.innerHTML = "";
		field.insert(
			new Element('option', {
				'value': ''
			}).
			update("<?php echo Mage::helper('zolagoadminhtml')->__("--- Select ---");?>")
		);
		for(var key in allAttributes){
			if(attributesInUse.indexOf(key)<0){ 
				field.insert(
                    new Element('option', {
                        'value': key
                    }).
                    update(allAttributes[key])
                );
			}
		}
	}
	
	function refreshParentSelects(){
		$$(".parent_attribute_id").each(function(el){
			var row = el.up("tr");
			if(row.id!="rowTpl"){
				var selfId = $(row).down(".attribute_id").value;
				var oldSelectId = $F(el);
				el.innerHTML = "";
				el.insert(
					new Element('option', {
						'value': ''
					}).
					update("<?php echo Mage::helper('zolagoadminhtml')->__("--- Select ---");?>")
				);
				for(var i=0; i<attributesInUse.length; i++){
					if(attributesInUse[i]!=selfId){
						el.insert(
							new Element('option', {
								'value': attributesInUse[i],
								'selected': oldSelectId==attributesInUse[i]
							}).
							update(allAttributes[attributesInUse[i]])
						);
					}
				}
			}
		})
	}
	
	function removeAttribute(attribute_id){
		var index = attributesInUse.indexOf(attribute_id);
		var ret;
		if(index>-1){
			ret  = attributesInUse[index];
			attributesInUse.splice(index, 1);
			refreshAttributeSelect();
			refreshParentSelects();
		}
		return ret;
	}
	
	function addAttribute(attribute_id){
		if(attributesInUse.indexOf(attribute_id)<0){
			attributesInUse.push(attribute_id);
			refreshAttributeSelect();
			refreshParentSelects();
		}
	}
	
	function refreshGridClasses() {
		var lastRowNum = 0;
		var tbody = $$('tbody.fieldset_config_body')[0];
        var trs = tbody.childElements();
		trs.forEach(function(singleTr) {
			$(singleTr).removeClassName('odd');
			$(singleTr).removeClassName('even');
			$(singleTr).addClassName(lastRowNum%2 ? 'odd' : 'even');
			lastRowNum++;
		});
	}

    $('addBtn').observe('click', function(e) {
		if($F("selectAttribute")){
			prepareNewItem($F("selectAttribute"));
		}else{
			alert("<?php echo Mage::helper("zolagoadminhtml")->__("Select attribute");?>")
		}
		e.stop();
	});



	editForm = $("filter_edit_form");
	
	formControl = {
		save: function(){
			editForm.submit();
		},
	    saveAndEdit: function(){
			$("save_and_edit").value = 1;
			editForm.submit();
		}
	}
	
<?php if (count($filterCollection)): ?>
	<?php foreach ($filterCollection as $filter): ?>
		addRow(<?php echo $this->getFilterJsonData($filter); ?>);
	<?php endforeach ;?>
<?php else:?>
	refreshAttributeSelect();
<?php endif;?>
})();
//]]>
</script>

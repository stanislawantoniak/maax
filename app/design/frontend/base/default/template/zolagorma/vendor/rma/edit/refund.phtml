<?php
/*
 * All variables are set in: zolagorma/vendor/rma/edit.phtml
 */
/** @var $this Zolago_Rma_Block_Vendor_Rma_Edit_Refund */
/** @var $_rma Zolago_Rma_Model_Rma */
$_rma = $this->getRma();
$_items = $_rma->getAllItems();
/** @var $_hlp Zolago_Rma_Helper_Data */
$_hlp = $this->getRmaHelper();
?>

<div class="modal fade" id="refundModal">
	<div class="modal-dialog wide">
		<form id="rmaRefundForm" action="<?php echo $this->getFormAction($_rma->getId()) ;?>" class="form-horizontal row-border" novalidate="novalidate" method="post">
			<div class="modal-content">
				<div class="modal-header">
					<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
					<h4 class="modal-title">
						<?php if($_rma->getPo()->isPaymentDotpay()): ?>
							<?php echo $_hlp->__("Ordering RMA refund");?>
						<?php else: ?>
							<?php echo $_hlp->__("Confirming RMA refund"); ?>
						<?php endif; ?>
					</h4>
					<div class="modal-comment">
						<?php if($_rma->getPo()->isPaymentDotpay()): ?>
							<?php echo $_hlp->__("Ordering a refund will inform gallery administrators about need of refunding the money. Refund will be processed manually and then will change it's status to completed"); ?>
						<?php else: ?>
							<?php echo $_hlp->__("Confirming refund means that you have already made a bank transfer with refund to customer.");?>
						<?php endif; ?>
					</div>
				</div>
				<div class="modal-body">
					<table id="rmaRefundItems" class="table table-striped table-bordered table-checkable  foot-empty-cells">
						<thead>
							<tr>
								<th width="1"></th>
								<th width="125"><?php echo $_hlp->__('SKU') ?></th>
								<th width="200"><?php echo $_hlp->__('Product Name') ?></th>
								<th width="1"><?php echo $_hlp->__('Paid') ?></th>
								<th width="1"><?php echo $_hlp->__('Refunded'); ?></th>
								<th width="1"><?php echo $_hlp->__('Remains'); ?></th>
								<th width="1"><?php echo str_replace(' ','&nbsp;',$_hlp->__('Amount to refund')) ?></th>
							</tr>
						</thead>
						<tbody>
						<?php $itemsIds = array() ?>
						<?php foreach ($_items as $_item): ?>
							<?php if ($_item->getOrderItem()->getParentItem()) continue; ?>
							<?php
							/** @var Mage_Core_Helper_Data $coreHlp */
							$coreHlp = Mage::helper('core');
							$_poItemId = $_item->getPoItem()->getId();
							if($_poItemId) {
								$paidNum = $_item->getPoItem()->getFinalItemPrice();
							} else {
								$paidNum = $_item->getPrice();
							}
							$paid = $coreHlp->currency($paidNum, true, false);
							$paidAmount = $this->getPriceValue($paidNum);

							$refundedAmount = $_item->getReturnedValue();
							$refunded = $this->getPriceValue($refundedAmount);

							$remainsAmount = $paidNum - $refundedAmount;
							$remains = $this->getPriceValue($remainsAmount);
							if($remainsAmount) {
								$itemsIds[] = $_item->getId();
							}
							?>
							<tr>
								<td class="align-center">
								<?php if($remainsAmount): ?>
									<input type="checkbox"
									       value="1"
									       name="rmaItems[<?php echo $_item->getId(); ?>]"
									       data-rma-item-id="<?php echo $_item->getId(); ?>" />
								<?php endif; ?>
								</td>
								<td>
									<?php echo $_item->getVendorSimpleSku(); ?>
								</td>
								<td>
									<?php echo $_poItemId ? $_item->getName() : $_hlp->__($_item->getName()); ?>
								</td>
								<td>
									<?php echo $paid; ?>
								</td>
								<td>
									<?php echo $refunded; ?>
								</td>
								<td>
									<?php echo $remains; ?>
								</td>
								<td>
								<?php if($remainsAmount): ?>
									<?php $remainsAmountFloat = floatval($remainsAmount); ?>
									<input type="hidden" id="returnValueMax_<?php echo $_item->getId(); ?>"
									       value="<?php echo $remainsAmountFloat+0.01 ?>"
									       data-value="<?php echo $remainsAmountFloat+0.01 ?>" />
									<input type="text"
									       value="<?php echo $remainsAmountFloat; ?>"
									       data-value="<?php echo $remainsAmountFloat; ?>"
									       name="returnValues[<?php echo $_item->getId(); ?>]"
									       disabled="disabled"
									       class="form-control" />
								<?php endif; ?>
								</td>
							</tr>
						<?php endforeach; ?>
						</tbody>
					</table>
					<input type="hidden" required="required" name="refundChecked" id="refundChecked" />
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-default" data-dismiss="modal"><?php echo $_hlp->__("Cancel");?></button>
					<button type="submit" value="1" class="btn form-btn-loading btn-primary" data-loading-text="<?php echo $_hlp->__("Loading...");?>">
						<?php if($_rma->getPo()->isPaymentDotpay()): ?>
							<?php echo $_hlp->__("Order refund"); ?>
						<?php else: ?>
							<?php echo $_hlp->__("Confirm refund");?>
						<?php endif; ?>
					</button>
				</div>
			</div>
		</form>
	</div>
</div>

<script>
	jQuery(document).ready(function() {
		var form = jQuery('#rmaRefundForm');
		form.validate({
			ignore: "",
			rules: {
				<?php foreach($itemsIds as $id): ?>
				"returnValues[<?php echo $id; ?>]": {
					lessthat: jQuery('#returnValueMax_<?php echo $id; ?>')
				},
				<?php endforeach; ?>
			},
			messages: {
				refundChecked: "<?php echo $_hlp->__("Select at least one product to refund"); ?>"
			}
		});

		var rows = jQuery('#rmaRefundItems').find('tbody tr');
		rows.click(function(e) {
			var target = jQuery(e.target),
				checkbox = jQuery(this).find('input[type=checkbox]'),
				checked = target.is('input[type=text]') ? true : !checkbox[0].checked;
			if(!target.is('input[type=checkbox]')) {
				checkbox.prop('checked', checked).trigger('change');
				if(target.is('input[type=text]')) {
					target.focus();
				}
			}
		});
		rows.find(':checkbox').change(function() {
			var checkbox = jQuery(this),
				input = jQuery('input[type=text][name="returnValues['+checkbox.data('rmaItemId')+']"]'),
				toDisable = !checkbox[0].checked;
			input.prop('disabled',toDisable);
			if(toDisable) {
				input.removeClass('required pricePositive numeric priceTwoPositionPrecision priceNoZeros').val(input.data('value'));
			} else {
				input.addClass('required pricePositive numeric priceTwoPositionPrecision priceNoZeros');
			}
			input.valid();

			var refundsChecked = 0,
				refundsCheckedInput = jQuery('#refundChecked');
			rows.find(':checkbox').each(function() {
				if(jQuery(this)[0].checked) {
					refundsChecked++;
				}
			});
			refundsCheckedInput.prop('required',(refundsChecked ? false : true)).prop('disabled',(refundsChecked ? true : false)).valid();
		});

		jQuery('input[name^=returnValues]').keyup(function () {
			if (this.value != this.value.replace(',','.').replace(/[^0-9\.]/g, '')) {
				this.value = this.value.replace(',','.').replace(/[^0-9\.]/g, '');
			}
		});
	});
</script>
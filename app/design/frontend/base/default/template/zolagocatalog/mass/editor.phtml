<style>
	.grid.custom-grid tbody td{
		background: #e7efef;
	}
	.grid.custom-grid table tfoot tr td{
		border-top: inherit;
	}
	.grid.custom-grid table{
		padding-bottom: 0;
	}
	.grid.custom-grid .filter-field-100 input.input-text,
	.grid.custom-grid .filter-field-100 textarea.textarea{
		width: 100%;
		box-sizing: border-box;
		-moz-box-sizing: border-box;
	}
	.custom-grid .scope{
		color: #6f8992;
		font-size: .9em;
	}
</style>
<div class="grid custom-grid" id="<?php echo $this->buildFieldId("editor");?>">
	<?php if($this->getGrid()): ?>
	<table style="display: none;">
		<tfoot id="<?php echo $this->buildFieldId("foot");?>">
			<tr id="<?php echo $this->getGrid()->getId();?>_change">
				<?php $i=0;?>
				<?php foreach ($this->getGrid()->getColumns() as $_column): ?>
					<?php if($i++==0):?>
						<td class="a-center" rowspan="2" style="vertical-align: middle;">
							<!-- <input type="checkbox" name="change"  value="1"/><br/> -->
						</td>
					<?php else:?>
						<td>
							<?php if($_field = $this->getChangeField($_column)):?>
								<div data-rel="<?php echo $_field->getRel();?>">
									<?php echo $_field->getElementHtml();?>
									<label for="<?php echo $_field->getId();?>"><?php echo $_field->getLabel();?></label>
								</div>
							<?php endif;?>
						</td>
					<?php endif;?>
				<?php endforeach;?>
			</tr>
			<tr class="filter" style="display:none;" id="<?php echo $this->getGrid()->getId();?>_fields">
				<?php $i=0;?>
				<?php foreach ($this->getGrid()->getColumns() as $_column): ?>
					<?php if($i++==0):?>
					<?php else:?>
						<td>
							<?php if($_field = $this->getField($_column)):?>
								<div class="filter-field-100 element-wrapper" style="display: none;" id="<?php echo $_field->getId() . "_wrapper";?>">
									<?php echo $this->getEmptyValueField($_field);?>
									<?php echo $_field->toHtml();?>
										<?php if($_column->getAttribute()):?>
										<div class="scope">[<?php echo $this->getScope($_column->getAttribute());?>]</div>
										<?php endif;?>
									<div>
									<?php foreach($this->getAdditionalFields($_column) as $_field):?>
										<?php echo $_field->toHtml();?>
									<?php endforeach;?>
									</div>
								</div>
							<?php endif;?>
						</td>
					<?php endif;?>
				</td>
				<?php endforeach;?>
			</tr>
			<tr style="display:none;"  id="<?php echo $this->getGrid()->getId();?>_confirm">
				<td  class="totals a-right" colspan="<?php echo $this->getGrid()->getColumnCount();?>">
					<?php echo $this->getSubmitButtonHtml(); ?>
				</td>
			<tr>
		</tfoot>
	</table>
	<?php endif;?>
</div>
<script type="text/javascript">
	(function(){
	
		var gridObj = <?php echo $this->getGrid()->getId();?>JsObject;
		var gridDom = $(gridObj.containerId); 
		var form ;
		var foot = $("<?php echo $this->buildFieldId("foot");?>");
		
		var oldInitGrid = gridObj.initGrid;
		
		var appendContent = function(grid, content){
			var table = $(grid.containerId).select("table.data")[0];
			if(!table.select("tfoot").length){
				table.insert({bottom: content});
			}
			$("<?php echo $this->buildFieldId("submit"); ?>").observe("click", submitHandler);
			$("<?php echo $this->buildFieldId("change");?>").select(".changer").each(function(el){
				el.observe("change", changerHandler)
			});
			
			// Prepare form
			var formEl = new Element("form", {id:"<?php echo $this->buildFieldId("editor_form");?>"});
			gridDom.select(".data")[0].wrap(formEl);
			form = new VarienForm("<?php echo $this->buildFieldId("editor_form");?>");	
			gridDom.select(".grid")[0].className = "grid custom-grid";
		}
		
		
		gridObj.initGrid = function(){
			oldInitGrid.apply(gridObj, arguments);
			appendContent(gridObj, foot);
		}
		
		
	
		var submitHandler = function(){
		
			var productIds = gridObj.massaction.getCheckedValues();
			
			if(productIds==""){	
				alert("<?php echo Mage::helper("zolagocatalog")->__("Select some products");?>");
				return;
			}
			
			if(!form.validator.validate()){
				return false;
			}
			
			var tmpData = $(form.form).serialize(true);
			var key;
			var data = {};
			
			for(key in tmpData){
				if(/^attributes/.test(key) && tmpData.hasOwnProperty(key)){
					data[key] = tmpData[key];
				}
			}
			if(!Object.keys(data).length){
				alert("<?php echo Mage::helper("zolagocatalog")->__("No attribute selected");?>");
				return;
			}
			
			data.store = $F("store_switcher");
			data.attribute_set =  $F("attribute_set_switcher");
			data.product_ids=  productIds;
	
			
			new Ajax.Request("<?php echo $this->getSaveUrl();?>", {
				parameters: data,
				method: "post",
				onSuccess: function(transport){
					if(transport.responseJSON){
						if(!transport.responseJSON.status){
							alert(transport.responseJSON.content);
							return;
						}
						//console.log(transport.responseJSON.content);
						gridObj.reload();
					}
				},
				onError: function(transport){
					alert("<?php echo Mage::helper("zolagocatalog")->__("Other error - contact administrator");?>");
				}
			});
		}
	
		var changerHandler = function(e){
			var el = $(e.currentTarget);
			var target = $(el.up().getAttribute("data-rel"));
			if(target){
				switchVisible(target.id, el.checked);
			}
			
		}
		//Event.observe(window, "resize", assignEditorLayout);
		
		Ajax.Responders.register({
			//onComplete: assignEditorLayout
		});
		
		
		currentEditCount = 0;

		var switchVisible = function(fieldId, mode){
			if(mode){
				$(fieldId).disabled = "";
				$(fieldId+"_wrapper").show();
				currentEditCount++;
			}else{
				$(fieldId).disabled = "disabled";
				$(fieldId+"_wrapper").hide();
				currentEditCount--;
			}
				
			if(currentEditCount>0){
				$("<?php echo $this->buildFieldId("fields");?>").show();
				$("<?php echo $this->buildFieldId("confirm");?>").show();
			}else{
				$("<?php echo $this->buildFieldId("fields");?>").hide();
				$("<?php echo $this->buildFieldId("confirm");?>").hide();
			}
			
			disableAdditionalFields(fieldId, mode);
			//assignEditorLayout();
		}
		
		var disableAdditionalFields = function(fieldId, mode){
			$(fieldId).up(".element-wrapper").select(".additional_field").each(function(el){
				$(el).disabled = mode ? "" : "disabled";
			});
			$(fieldId).up(".element-wrapper").select(".empty_field").each(function(el){
				$(el).disabled = mode ? "" : "disabled";
			});
			// Datepicker
			$(fieldId).up(".element-wrapper").select("img.v-middle").each(function(el){
				mode ? $(el).show() : $(el).hide();
			});
		}
		
		//assignEditorLayout();
		appendContent(gridObj, foot);
	})();
</script>
<div class="container">
    <div class="page-header">
        <div class="page-title">
            <h3><?php echo Mage::helper("zolagocatalog")->__("Product mass actions");?></h3>
        </div>
    </div>

    <div class="row">
       <div class="col-md-12">
           <div class="widget box">
               <div class="widget-header">
<!--                   Filters-->
                   <h4><i class="icon-filter"></i><?php echo Mage::helper("zolagocatalog")->__("Filters");?></h4>
                   <div class="toolbar no-padding">
                       <div class="btn-group"><span class="btn btn-xs widget-collapse"><i class="icon-angle-down"></i></span></div>
                   </div>
               </div>
               <div class="widget-content fiters">
                   <form class="form-horizontal">
                       <div class="form-group">

                           <?php if ($this->getStoreSwitcherHtml()): ?>
                               <div class="col-md-6">
                                   <div class="row">
                                       <?php echo $this->getChildHtml("attribute_set_switcher"); ?>
                                   </div>
                               </div>
                               <div class="col-md-6">
                                   <div class="row">
                                       <?php echo $this->getStoreSwitcherHtml(); ?>
                                   </div>
                               </div>
                           <?php else: ?>
                               <div class="col-md-6">
                                   <div class="row">
                                       <?php echo $this->getChildHtml("attribute_set_switcher"); ?>
                                   </div>
                               </div>
                           <?php endif; ?>
                       </div>


                       <?php echo $this->getChildHtml("static_filter"); ?>
                   </form>
               </div>
           </div>
       </div>
    </div>
</div>



    <?php echo $this->getMessagesBlock()->getGroupedHtml(); ?>

    <?php if($this->getCurrentAttributeSetId()):?>
        <script type="text/javascript">
            FORM_KEY = "<?php echo Mage::getSingleton('core/session')->getFormKey() ?>";
        </script>
        <script type="text/javascript">
            var gridObj;
        </script>
        <div class="container z-grid">
            <div class="widget box">
                <div class="widget-content">
                    <?php

                    echo $this->getGridHtml(); ?>
                </div>
            </div>
        </div>
        <script type="text/javascript">
            (function(){
                gridObj = <?php echo $this->getGridJsObjectName();?>;
                var topForm = $("filter_form");
                // create integrator
                new Zolago.gridIntegrator(gridObj);

                gridObj.doFilter = (function(){
                    var filters = $$('#'+this.containerId+' .filter input', '#'+this.containerId+' .filter select');
                    var filters2 = $$('#'+topForm.id+' input', '#'+topForm.id+' select');
                    var elements = [],
                        elements2 = [];
                    for(var i in filters){
                        if(filters[i].value && filters[i].value.length) elements.push(filters[i]);
                    }
                    for(var i in filters2){
                        if(filters2[i].value && filters2[i].value.length) elements2.push(filters2[i]);
                    }

                    var serialized = Form.serializeElements(elements);
                    var serialized2 = Form.serializeElements(elements2);
                    var params = []

                    if(serialized){
                        params.push(serialized);
                    }
                    if(serialized2){
                        params.push(serialized2);
                    }

                    if (!this.doFilterCallback || (this.doFilterCallback && this.doFilterCallback())) {
                        this.reload(this.addVarToUrl(this.filterVar, encode_base64(params.join("&"))));
                    }
                }).bind(gridObj);


                topForm.observe("submit", function(e){
                    gridObj.doFilter();
                    e.preventDefault();
                });
                topForm.observe("reset", function(e){
                    gridObj.resetFilter();
                    e.preventDefault();
                });

            })();
            // Do pickers
            jQuery(function($){
                $( ".datepicker" ).datepicker();

                $('#myModal').modal();

                $table = $("#zolagocatalog_mass_grid_table");

                $table.tableFreezer();
            });

        </script>
        <?php echo $this->getChildHtml("editor");?>

    <?php endif;?>

<script>


    (function($) {
        $.fn.extend({
            tableFreezer: function(options) {
                var cfg = $.extend(true, {
                    freezeHeader: true,
                    freezeFooter: false,
                    freezeColumnsLeft: false,  // provide integer as a number of columns you want to freeze on the left hand side
                    freezeColumnsRight: false  // provide integer as a number of columns you want to freeze on the right hand side
                }, options);

//      var scrollWidth = cfg.scroll.width;
//      var scrollHeight = cfg.scroll.height;
//      var fixedLeftWidth = null;
//      var fixedHeadHeight = null;
                this.each(function() {
                    console.log(this);
                    init($(this));
                });

                function getHeader($table) {

                    $tempTable = $table.clone();
                    $header = $tempTable.find("thead");
                    $headerElems = $header.find('th');
                    $tempTable.html('').append($header);

                    $table.find('thead th').each(function(i){

                        w = $(this).width();
                        $($headerElems[i]).css('width', w + 'px');

                    });
                    return $tempTable;
                };

                function getFooter($table) {

                    $tempTable = $table.clone();
                    $footer = $tempTable.find("tfoot");
                    $footerElems = $footer.find('td');
                    $tempTable.html('').append($footer);

                    $table.find('thead th').each(function(i){

                        w = $(this).width();
                        $($footerElems[i]).css('width', (w) + 'px');

                    });
                    return $tempTable;
                };

                function getColGroup($table) {

                    var html = '<colgroup>',
                        w;

                    $table.find('thead th').each(function(){

                        w = $(this).width();
                        html += '<col width="' + w + '">';

                    });
                    html += '</colgroup>';

                    return $(html);
                };

                function init($table) {

                    var $tableContainer = $table.parent(),
                        tableContainerW = $tableContainer.width();
                        tableW = $table.width(),
                        $overlayTable = $table.clone(true),
                        $colGroup = getColGroup($table),
                        $overlayTableHeader = getHeader($table),
                        $overlayTableFooter = getFooter($table),
                        $viewport = $('<div id="tf-viewport">');

                    console.log(tableW);
                    console.log($table.outerWidth());
                    console.log($overlayTableHeader);
                    console.log($overlayTableFooter);

                    $table.find('colgroup').remove();
                    $table.append($colGroup);

                    $tableContainer.css('position', 'relative');
                    $overlayTableHeader.css('width', tableW)
                        .css('background', 'white')
                                 .css('position', 'absolute')
                                 .css('top', 0)
                                 .css('left', 0);

                    $overlayTableFooter.css('width', tableW)
                        .css('background', 'white')
                        .css('position', 'absolute')
                        .css('bottom', 0)
                        .css('left', 0);

                    $overlayTableHeader.append($colGroup);
                    $overlayTableFooter.append($colGroup);

                    $tableContainer.append($overlayTableHeader);
                    $tableContainer.append($overlayTableFooter);

                    $viewport.css('width', tableContainerW + 'px')
                             .css('height', '300px')
                             .css('overflow', 'auto');

                    if(cfg.freezeColumnsLeft || cfg.freezeColumnsRight){
                        $tableContainer.find('table').wrapAll($viewport);
                    }
                    else{
                        $table.wrapAll($viewport);
                    }

                }

                return this;
            }
        });
    })(jQuery);

</script>
<?php
$_hlp = Mage::helper('udropship');
$_sHlp = Mage::helper('udmspro');
$_session = Mage::getSingleton('udropship/session');

?>
<div class="col-md-12">
    <div class="col-md-8 col-md-offset-2 col-sm-8 col-sm-offset-3">
        <div style="margin-top:100px;">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h3 class="a-center"><?php echo $_sHlp->__('Become a Vendor') ?></h3>
                </div>
                <div class="panel-body">
                    <?php echo $this->getMessagesBlock()->getGroupedHtml() ?>
                    <form action="<?php echo $this->getUrl('umicrosite/vendor/registerPost') ?>" enctype="multipart/form-data"
                          method="post"
                          id="registration-form" autocomplete="off">
                        <?php foreach ($this->getForm()->getElements() as $element) {
                            echo $element->toHtml();
                        } ?>

                        <div class="container">
                            <div class="col-md-12">
                                <div style="margin-top:10px" class="form-group">
                                    <span class="required"><?php echo $this->__('* Indicated Required Fields') ?></span>
                                    <br><br>

                                    <div class="controls">
                                        <button class="form-button btn btn-lg btn-primary btn-block" type="submit"
                                                name="send">
                                            <span><?php echo $this->__('Register') ?></span></button>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="control">
                                        <div style="border-top: 1px solid#888; padding-top:15px; font-size:85%">
                                            <a href="<?php echo $this->getUrl('udropship/vendor') ?>">&laquo; <?php echo $this->__('Return to log in') ?></a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </form>

                </div>
            </div>
        </div>
    </div>
</div>


<script type="text/javascript">
    var udNumberValidate = function (cmp, v, elm) {
        var checkVal, val = parseNumber(v);
        var checkElId = elm.id+'-'+cmp;
        if ($(checkElId)) {
            checkVal = parseNumber($(checkElId).innerHTML);
        }
        return (!isNaN(val) && !isNaN(checkVal) && udNumberCompare(cmp, val, checkVal))
            || !isNaN(val) && isNaN(checkVal) || v=='';
    }
    var udNumberCompare = function (cmp, a, b) {
        if (cmp == 'lte') {
            return a<=b;
        } else if (cmp == 'lt') {
            return a<b;
        } else if (cmp == 'gte') {
            return a>=b;
        } else if (cmp == 'gt') {
            return a>b;
        } else {
            return true;
        }
    }
    var udLengthValidate = function (sym, cmp, v, elm) {
        var checkVal, val = ''+v;
        if (sym) {
            val = val.gsub(/\s+/, '');
        } else {
            val = val.strip();
        }
        var checkElId = elm.id+'-'+cmp;
        if ($(checkElId)) {
            checkVal = parseNumber($(checkElId).innerHTML);
        }
        var res = (!isNaN(checkVal) && udLengthCompare(cmp, val, checkVal))
            || isNaN(checkVal);
        return res;
    }
    var udLengthCompare = function (cmp, str, len) {
        if (cmp == 'lte') {
            return (''+str).length<=len;
        } else if (cmp == 'lt') {
            return (''+str).length<len;
        } else if (cmp == 'gte') {
            return (''+str).length>=len;
        } else if (cmp == 'gt') {
            return (''+str).length>len;
        } else {
            return true;
        }
    }
    var udCheckEmailExist = function(v, el) {
        var result = true, allowReturn=false;
        if (!v) return true;
        new Ajax.Request('<?php echo $this->getUrl('udmspro/vendor/checkEmailUnique')?>', {
            asynchronous: false,
            method: 'get',
            parameters: {
                email: v
            },
            onFailure: function(transport){
                alert('Error during email check');
            },
            onSuccess: function (transport) {
                var responseText = transport.responseText;
                if (responseText.isJSON()) {
                    var response = transport.responseText.evalJSON()
                    if (response.error) {
                        result = false;
                    } else if (response.success) {
                        result = true;
                    }
                    if(response.ajaxExpired && response.ajaxRedirect) {
                        setLocation(response.ajaxRedirect);
                    }
                } else {
                    result = false;
                    alert('Error during email check');
                }
            }
        });
        return result;
    }
    var udCheckVendorNameExist = function(v, el) {
        var result = true, allowReturn=false;
        if (!v) return true;
        new Ajax.Request('<?php echo $this->getUrl('udmspro/vendor/checkVendorNameUnique')?>', {
            asynchronous: false,
            method: 'get',
            parameters: {
                vendor_name: v
            },
            onFailure: function(transport){
                alert('Error during shop name check');
            },
            onSuccess: function (transport) {
                var responseText = transport.responseText;
                if (responseText.isJSON()) {
                    var response = transport.responseText.evalJSON()
                    if (response.error) {
                        result = false;
                    } else if (response.success) {
                        result = true;
                    }
                    if(response.ajaxExpired && response.ajaxRedirect) {
                        setLocation(response.ajaxRedirect);
                    }
                } else {
                    result = false;
                    alert('Error during shop name check');
                }
            }
        });
        return result;
    }

    Translator.add('Please enter valid email address', '<?php echo $this->__('Please enter valid email address'); ?>');

    Validation.addAllThese([
        ['validate-urlkey', 'Please use only letters (a-z) or numbers (0-9) in this field, first character should be a letter.', function (v) {
            if (!v) return true;
            return Validation.get('IsEmpty').test(v) ||  /^[a-z]+[a-z0-9]+$/.test(v)
        }],
        ['validate-email', Translator.translate('Please enter valid email address'), function (v) {
            //return Validation.get('IsEmpty').test(v) || /\w{1,}[@][\w\-]{1,}([.]([\w\-]{1,})){1,3}$/.test(v)
            //return Validation.get('IsEmpty').test(v) || /^[\!\#$%\*/?|\^\{\}`~&\'\+\-=_a-z0-9][\!\#$%\*/?|\^\{\}`~&\'\+\-=_a-z0-9\.]{1,30}[\!\#$%\*/?|\^\{\}`~&\'\+\-=_a-z0-9]@([a-z0-9_-]{1,30}\.){1,5}[a-z]{2,4}$/i.test(v)
            return Validation.get('IsEmpty').test(v) || /^([a-z0-9,!\#\$%&'\*\+\/=\?\^_`\{\|\}~-]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z0-9,!\#\$%&'\*\+\/=\?\^_`\{\|\}~-]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*@([a-z0-9-]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z0-9-]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*\.(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]){2,})$/i.test(v)
        }],
        ['udvendor_name-unique', 'This vendor name is already used.', udCheckVendorNameExist],
        ['udemail-unique', 'This email is already used.', udCheckEmailExist],
        ['udvalidate-lte', 'Invalid input or value exceed maximum.', udNumberValidate.curry('lte')],
        ['udvalidate-lt', 'Invalid input or value exceed maximum.', udNumberValidate.curry('lt')],
        ['udvalidate-gte', 'Invalid input or value lesser minimum.', udNumberValidate.curry('gte')],
        ['udvalidate-gt', 'Invalid input or value lesser minimum.', udNumberValidate.curry('gt')],
        ['udvalidate-length-lte', 'Length exceed maximum.', udLengthValidate.curry(false, 'lte')],
        ['udvalidate-length-lt', 'Length exceed maximum.', udLengthValidate.curry(false, 'lt')],
        ['udvalidate-length-gte', 'Length lesser minimum.', udLengthValidate.curry(false, 'gte')],
        ['udvalidate-length-gt', 'Length lesser minimum.', udLengthValidate.curry(false, 'gt')],
        ['udvalidate-symlength-lte', 'Length exceed maximum.', udLengthValidate.curry(true, 'lte')],
        ['udvalidate-symlength-lt', 'Length exceed maximum.', udLengthValidate.curry(true, 'lt')],
        ['udvalidate-symlength-gte', 'Length lesser minimum.', udLengthValidate.curry(true, 'gte')],
        ['udvalidate-symlength-gt', 'Length lesser minimum.', udLengthValidate.curry(true, 'gt')],
        ['udvalidate-nospecial', 'Please use only letters (a-z or A-Z) or numbers (0-9) or spaces only in this field. No other characters are allowed.', function(v) {
            return Validation.get('IsEmpty').test(v) ||  /^[ \ta-zA-Z0-9]+$/.test(v) /*!/\W/.test(v)*/
        }]
    ]);
    var udRegForm = new VarienForm('registration-form', true);
    if($('country_id')){
        new RegionUpdater('country_id', 'region', 'region_id', <?php echo $this->helper('directory')->getRegionJson() ?>);

    }

    Event.observe(window, 'load', function(e){
        var payout_selector = $('payout_method');
        if(!payout_selector) {
            return;
        }

        var name = $('vendor_attn');
        if (!name) {
            return;
        }

        function toggleNameRequired(){
            var val = payout_selector.value;
            if (val == 'paypal') {
                toggleElementRequired(name, true);
            } else {
                toggleElementRequired(name, false);
            }
        }


        function toggleElementRequired(el, req) {
            var el = $(el);
            var lbl = el.previous('label[for="' + el.identify() + '"]')
            if (req) {
                el.addClassName('required-entry');
                if (lbl) {
                    lbl.insert('<span class="required">*</span>')
                }
            }else {
                el.removeClassName('required-entry');
                if (lbl) {
                    var req_span = lbl.down('span.required');
                    if (req_span) {
                        Element.remove(req_span);
                    }
                }
            }
        }

        payout_selector.observe('change', toggleNameRequired);
        toggleNameRequired();
    });
</script>

<?php
/** @var GH_Api_Block_Dropship_Soap $this */
/** @var GH_Api_Helper_Data $_helper */
$_helper = Mage::helper("ghapi");
?>
<div class="row" id="accordion">
	<div class="col-md-12">
		<form class="form-horizontal">
            <p><?php echo $_helper->__("Testing WSDL");?>: <pre><a href='<?php echo $_helper->getWsdlTestUrl();?>' target='_blank'><?php echo $_helper->getWsdlTestUrl();?></a></pre></p>
            <p><?php echo $_helper->__("Production WSDL");?>: <pre><a href='<?php echo $_helper->getWsdlUrl();?>' target='_blank'><?php echo $_helper->getWsdlUrl();?></a></pre></p>
			<br/>
			<?php echo $this->getChildHtml('ghapi_dropship_soap_login');?>
			<?php echo $this->getChildHtml('ghapi_dropship_soap_message');?>
			<?php echo $this->getChildHtml('ghapi_dropship_soap_confirmation');?>
			<?php echo $this->getChildHtml('ghapi_dropship_soap_orders');?>
			<?php echo $this->getChildHtml('ghapi_dropship_soap_collected');?>
			<?php echo $this->getChildHtml('ghapi_dropship_soap_shipment');?>
			<?php echo $this->getChildHtml('ghapi_dropship_soap_reservation');?>
			<?php echo $this->getChildHtml('ghapi_dropship_soap_categories');?>
			<?php echo $this->getChildHtml('ghapi_dropship_soap_update_products');?>
		</form>
	</div>
</div>

<script>
    // Simple accordion
    jQuery('#accordion .widget-closed .widget-header').click(function(){
        jQuery("#accordion .box:not(.widget-closed) .widget-header").not(this).click();
    });
    // --Simple accordion

jQuery(function ($) {
	function doSoapAjax(params,funcname) {
        $('#soap_ajax_answer_'+funcname).html('<img src="/skin/frontend/default/udropship/img/bootsrap/ajax-loading.gif">');
		$.ajax({
			url: '/udropship/ghapi/test',
			method: 'POST',
			data: params,
			success: function(answer) {
				$('#soap_ajax_answer_'+funcname).html(answer);	
				Prism.highlightAll();
			}
		});
	};

    //doLogin
    jQuery('#do_login_action').click(function(){doLogin(); });
    jQuery('#soap_login_vendor_id, #soap_login_api_key, #soap_login_password').keypress(function (e) { if (e.which == 13) { doLogin(); return false;} });

    function doLogin(){
        var params = {};
        params.action = 'doLogin';
        params.vendorId = jQuery('#soap_login_vendor_id').val();
        params.password = jQuery('#soap_login_password').val();
        params.apiKey	= jQuery('#soap_login_api_key').val();
        doSoapAjax(params,'login');
    }
    //--doLogin

    //getChangeOrderMessage
    jQuery('#get_message_action').click(function(){getChangeOrderMessage(); });
    jQuery('#soap_message_token, #soap_message_size').keypress(function (e) { if (e.which == 13) { getChangeOrderMessage(); return false;} });

    function getChangeOrderMessage(){
        var params = {};
        params.action = 'getChangeOrderMessage';
        params.token = jQuery('#soap_message_token').val();
        params.size = jQuery('#soap_message_size').val();
        params.messageType	= jQuery('#soap_message_type').val();
        params.orderId = jQuery('#soap_message_order_id').val();
        doSoapAjax(params,'message');
    }
    //--getChangeOrderMessage

    //setChangeOrderMessageConfirmation
    jQuery('#confirmation_message_action').click(function(){setChangeOrderMessageConfirmation(); });
    jQuery('#soap_confirmation_token, #soap_confirmation_order_list').keypress(function (e) { if (e.which == 13) { getChangeOrderMessage(); return false;} });

    function setChangeOrderMessageConfirmation(){
        var params = {};
        params.action = 'setChangeOrderMessageConfirmation';
        params.token = jQuery('#soap_confirmation_token').val();
        params.list = jQuery('#soap_confirmation_order_list').val();
        doSoapAjax(params,'confirm');
    }
    //--setChangeOrderMessageConfirmation

    //getOrdersByID
    jQuery('#get_orders_action').click(function(){getOrdersByID(); });
    jQuery('#soap_order_token, #soap_order_list').keypress(function (e) { if (e.which == 13) { getOrdersByID(); return false;} });

    function getOrdersByID(){
        var params = {};
        params.action = 'getOrdersByID';
        params.token = jQuery('#soap_order_token').val();
        params.list = jQuery('#soap_order_list').val();
        doSoapAjax(params,'order');
    }
    //--getOrdersByID

    //setOrderAsCollected
    jQuery('#set_collected_action').click(function(){setOrderAsCollected(); });
    jQuery('#soap_collected_token, #soap_collected_order_list').keypress(function (e) { if (e.which == 13) { setOrderAsCollected(); return false;} });

    function setOrderAsCollected(){
        var params = {};
        params.action = 'setOrderAsCollected';
        params.token = jQuery('#soap_collected_token').val();
        params.list = jQuery('#soap_collected_order_list').val();
        doSoapAjax(params,'collected');
    }
    //--setOrderAsCollected

    //setOrderShipment
    jQuery('#set_shipment_action').click(function(){setOrderShipment(); });
    jQuery('#soap_shipment_token, #soap_shipment_order_id, #soap_shipment_date_shipped, #soap_shipment_shipment_tracking_number').keypress(function (e) { if (e.which == 13) { setOrderShipment(); return false;} });

    function setOrderShipment() {
        var params = {};
        params.action = 'setOrderShipment';
        params.token = jQuery('#soap_shipment_token').val();
        params.orderID = jQuery('#soap_shipment_order_id').val();
        params.dateShipped = jQuery('#soap_shipment_date_shipped').val();
        params.shipmentTrackingNumber = jQuery('#soap_shipment_shipment_tracking_number').val();
        params.courier = jQuery('#soap_shipment_courier').val();
        doSoapAjax(params,'shipment');
    }
    //--setOrderShipment

 	//setOrderReservation
    jQuery('#set_reservation_reservation_action').click(function(){setOrderReservation(); });
    jQuery('#soap_reservation_token, #soap_reservation_order_id, #soap_reservation_message').keypress(function (e) { if (e.which == 13) { setOrderReservation(); return false;} });

    function setOrderReservation() {
        var params = {};
        params.action = 'setOrderReservation';
        params.token = jQuery('#soap_reservation_token').val();
        params.orderID = jQuery('#soap_reservation_order_id').val();
        params.reservationStatus = jQuery('#soap_shipment_reservation_status').val();
        params.reservationMessage = jQuery('#soap_reservation_message').val();
        doSoapAjax(params,'reservation');
    }
 	//--setOrderReservation

    //getCategories
    jQuery('#get_categories_action').click(function(){getCategoriesSet(); });
    jQuery('#soap_categories_token').keypress(function (e) { if (e.which == 13) { getChangeOrderMessage(); return false;} });

    function getCategoriesSet(){
        var params = {};
        params.action = 'getCategories';
        params.token = jQuery('#soap_categories_token').val();
        doSoapAjax(params,'get_categories');
    }
    //--getCategories

	//updateProductsPricesStocks
	jQuery('.update_products_type').change(function () {
		var name = jQuery(this).attr('name');
		if (name == 'type_price') {
			if (jQuery(this).prop("checked")) {
				jQuery('.price-x').removeAttr('disabled');
			} else {
				jQuery('.price-x').attr('disabled', 'disabled');
			}
		} else {
			if (jQuery(this).prop("checked")) {
				jQuery('#soap_update_products_pos, #soap_update_products_qty').removeAttr('disabled');
			} else {
				jQuery('#soap_update_products_pos, #soap_update_products_qty').attr('disabled', 'disabled');
			}
		}
		if (!jQuery("input[name='type_price']").prop("checked") && !jQuery("input[name='type_stock']").prop("checked")) {
			jQuery('#soap_update_products_sku').attr('disabled', 'disabled');
		} else {
			jQuery('#soap_update_products_sku').removeAttr('disabled');
		}
	});

	jQuery('#update_products_action').click(function(){updateProducts(); });
	jQuery('#soap_update_products_token, #soap_update_products_type, #soap_update_products_sku, .price-x, #soap_update_products_pos, #soap_update_products_qty').keypress(function (e) { if (e.which == 13) { updateProducts(); return false;} });

	function updateProducts(){
		var token  = jQuery('#soap_update_products_token').val(),
			usePrice = jQuery("input[name='type_price']").prop("checked"),
			useStock = jQuery("input[name='type_stock']").prop("checked"),
			sku    = jQuery('#soap_update_products_sku').val(),
			posId  = jQuery('#soap_update_products_pos').val(),
			qty    = jQuery('#soap_update_products_qty').val(),
			priceA = jQuery('#price-a').val(),
			priceB = jQuery('#price-b').val(),
			priceC = jQuery('#price-c').val(),
			priceZ = jQuery('#price-z').val(),
			msrp   = jQuery('#price-salePriceBefore').val(),
			market = jQuery('#price-marketPrice').val(),
			product= {},
			params = {
				action : 'updateProductsPricesStocks',
				token  : token
			};

		if (usePrice) {
			product = {};
			product.sku = sku;
			product.pricesTypesList = [];

			var obj = {
				"A": priceA,
				"B": priceB,
				"C": priceC,
				"Z": priceZ,
				"salePriceBefore": msrp,
				"marketPrice": market
			};

			for (var prop in obj) {
				if (obj.hasOwnProperty(prop)) {
					if (obj[prop].length) {
						product.pricesTypesList.push({
							priceType: prop,
							priceValue: obj[prop]
						});
					}
				}
			}

			params.productsPricesUpdateList = [];
			params.productsPricesUpdateList.push(product);
		}
		if (useStock) {
			product = {};
			product.sku = sku;
			product.posesList = [];

			product.posesList.push({
				id: posId,
				qty: qty
			});

			params.productsStocksUpdateList = [];
			params.productsStocksUpdateList.push(product);
		}
		doSoapAjax(params,'update_products');
	}
	//--updateProductsPricesStocks
});
</script>
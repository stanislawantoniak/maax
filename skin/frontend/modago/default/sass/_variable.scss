// VARIABLE

@mixin reset-m {
    margin: 0;
    padding: 0;
}
@mixin reset-l {
    @include reset-m;
    list-style: none;
}
/*
.page-wrap {
  width: 75%;
  @include breakpoint(xs) { width: 60%; }
  @include breakpoint(sm) { width: 80%; }
  @include breakpoint(md) { width: 95%; }
  @include breakpoint(lg) { width: 95%; }
}
*/
$screen-xs:                  480px !default;
$screen-xs-min:              $screen-xs !default;
$screen-phone:               $screen-xs-min !default;

// Small screen / tablet
// Note: Deprecated $screen-sm and $screen-tablet as of v3.0.1
$screen-sm:                  768px !default;
$screen-sm-min:              $screen-sm !default;
$screen-tablet:              $screen-sm-min !default;

// Medium screen / desktop
// Note: Deprecated $screen-md and $screen-desktop as of v3.0.1
$screen-md:                  992px !default;
$screen-md-min:              $screen-md !default;
$screen-desktop:             $screen-md-min !default;

// Large screen / wide desktop
// Note: Deprecated $screen-lg and $screen-lg-desktop as of v3.0.1
$screen-lg:                  1200px !default;
$screen-lg-min:              $screen-lg !default;
$screen-lg-desktop:          $screen-lg-min !default;

// So media queries don't overlap when required, provide a maximum
$screen-xs-max:              ($screen-sm-min - 1) !default;
$screen-sm-max:              ($screen-md-min - 1) !default;
$screen-md-max:              ($screen-lg-min - 1) !default;
@mixin breakpoint($point) {
  @if $point == xxs {
    @media (max-width: $screen-xs) { @content; }
  } 
  @else if $point == xs {
    @media (max-width: $screen-xs-max) { @content; }
  }
  @else if $point == sm {
    @media (min-width: $screen-sm-min) and (max-width: $screen-sm-max) { @content; }
  }
  @else if $point == md {
    @media (min-width: $screen-md-min) and (max-width: $screen-md-max)  { @content; }
  }
  @else if $point == lg {
    @media (min-width: $screen-lg-min)  { @content; }
  }
  @else if $point == max_md {
    @media (min-width: $screen-md-max)  { @content; }
  }
}
@font-face {
	font-family:'Glyphicons Halflings';
	src:url(../fonts/glyphicons/glyphicons-halflings-regular.eot);
	src:url(../fonts/glyphicons/glyphicons-halflings-regular.eot?#iefix) format('embedded-opentype'),
	url(../fonts/glyphicons/glyphicons-halflings-regular.woff) format('woff'),
	url(../fonts/glyphicons/glyphicons-halflings-regular.ttf) format('truetype'),
	url(../fonts/glyphicons/glyphicons-halflings-regular.svg#glyphicons_halflingsregular) format('svg');
	font-weight: normal;
	font-style: normal;
	}

$fontLight : 'latolight';
$fontRegular :'latoregular';
$fontBlack : 'latoblack';

$icoMap: sprite-map("sprites/ico/*.png");
$buttonMap: sprite-map("sprites/buttons/*.png");
$bulletMap: sprite-map("sprites/bullet/*.png");
$selectMap: sprite-map("sprites/select/*.png"); 
$arrowMap: sprite-map("sprites/arrow/*.png"); 